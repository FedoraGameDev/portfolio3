{"ast":null,"code":"import _objectSpread from \"/mnt/BigDisk/Programming/Web/portfolio3/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/mnt/BigDisk/Programming/Web/portfolio3/src/Components/Contact.js\";\nimport React, { Component } from \"react\";\nimport { Message, Header, Form } from \"semantic-ui-react\";\nconst INITIAL_STATE = {\n  email: \"\",\n  message: \"\",\n  messageValid: true,\n  emailValid: true\n};\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      const emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n      const _this$state = this.state,\n            email = _this$state.email,\n            message = _this$state.message;\n      const emailValid = emailRegex.test(email);\n      const messageValid = message != \"\";\n      this.setState({\n        emailValid,\n        messageValid\n      });\n\n      if (emailValid && messageValid) {//\n      }\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          message = _this$state2.message;\n    return React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Message, {\n      color: \"black\",\n      style: {\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Contact Me\")), React.createElement(Message.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Form, {\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      label: \"Email\",\n      name: \"email\",\n      type: \"text\",\n      placeholder: \"email\",\n      value: email,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(Form.TextArea, {\n      label: \"Message\",\n      name: \"message\",\n      placeholder: \"message\",\n      value: message,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Form.Button, {\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/mnt/BigDisk/Programming/Web/portfolio3/src/Components/Contact.js"],"names":["React","Component","Message","Header","Form","INITIAL_STATE","email","message","messageValid","emailValid","Contact","constructor","props","onChange","event","setState","target","name","value","onSubmit","emailRegex","state","test","render","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Message, Header, Form } from \"semantic-ui-react\";\n\nconst INITIAL_STATE = {\n    email: \"\",\n    message: \"\",\n    messageValid: true,\n    emailValid: true\n}\n\nclass Contact extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onChange = event =>\n    {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    onSubmit = () =>\n    {\n        const emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n        const { email, message } = this.state;\n        const emailValid = emailRegex.test(email);\n        const messageValid = message != \"\";\n\n        this.setState({ emailValid, messageValid });\n\n        if (emailValid && messageValid)\n        {\n            //\n        }\n    }\n\n    render()\n    {\n        const { email, message } = this.state;\n\n        return (\n            <div style={{ textAlign: \"center\" }}>\n                <Message color=\"black\" style={{ textAlign: \"left\" }}>\n                    <Message.Header><Header as=\"h1\" color=\"blue\">Contact Me</Header></Message.Header>\n                    <Message.Content>\n                        <Form inverted>\n                            <Form.Group>\n                                <Form.Input label=\"Email\" name=\"email\" type=\"text\" placeholder=\"email\" value={email} onChange={this.onChange} />\n                            </Form.Group>\n                            <Form.TextArea label=\"Message\" name=\"message\" placeholder=\"message\" value={message} onChange={this.onChange} />\n                            <Form.Button primary>Submit</Form.Button>\n                        </Form>\n                    </Message.Content>\n                </Message>\n            </div>\n        )\n    }\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}